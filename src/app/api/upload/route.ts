// app/api/files/upload/route.ts
import { NextResponse } from "next/server"
import { writeFile, mkdir } from "fs/promises"
import path from "path"
import { existsSync } from "fs"

interface UploadResponse {
    success: boolean;
    url?: string;
    filename?: string;
    size?: number;
    type?: string;
    error?: string;
}

export async function POST(request: Request): Promise<NextResponse<UploadResponse>> {
    try {
        const data = await request.formData()
        const file: File | null = data.get('file') as unknown as File

        if (!file) {
            return NextResponse.json({
                success: false,
                error: "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
            }, { status: 400 })
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        const maxSize = 5 * 1024 * 1024 // 5MB
        if (file.size > maxSize) {
            return NextResponse.json({
                success: false,
                error: "–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 5 –ú–ë)"
            }, { status: 400 })
        }

        // –¢–∏–ø —Ñ–∞–π–ª–∞ –∏ –ø–æ–¥–ø–∞–ø–∫–∞
        const fileType = file.type.split('/')[0] // image, application
        const subfolder = fileType === 'image' ? 'images' : 'documents'

        // –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
        const timestamp = Date.now()
        const cleanName = file.name.replace(/[^a-zA-Z0-9.-]/g, "_")
        const filename = `${timestamp}_${cleanName}`

        // –ü—É—Ç—å: .next/server/app/api/files/[type]/[filename]
        const uploadDir = path.join(process.cwd(), ".next", "server", "app", "api", "files", subfolder)
        const filepath = path.join(uploadDir, filename)

        // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É
        if (!existsSync(uploadDir)) {
            await mkdir(uploadDir, { recursive: true })
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        const bytes = await file.arrayBuffer()
        const buffer = Buffer.from(bytes)
        await writeFile(filepath, buffer)

        // –ü—É–±–ª–∏—á–Ω—ã–π URL —á–µ—Ä–µ–∑ API route
        const fileUrl = `/api/files/${subfolder}/${filename}`

        console.log(`üíæ File uploaded: ${fileUrl}`)

        return NextResponse.json({
            success: true,
            url: fileUrl, // /api/files/images/filename.png
            filename: file.name,
            size: file.size,
            type: fileType,
        })
    } catch (error) {
        console.error("üí• –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:", error)
        return NextResponse.json({
            success: false,
            error: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞",
            details: error instanceof Error ? error.message : 'Unknown error'
        }, { status: 500 })
    }
}